= form_tag '/search/index', :method => :post do
  = label_tag :terms, "github repository search"
  %br
  = text_field_tag :terms, @original_terms
  = submit_tag :search
  %br

#results
  - if @repositories
    - @repositories.each do |repo|
      %div
        .name
          %a{ :href => repo["url"] }
            = repo["name"]
      .author
        by:
        %a{ :href => "https://github.com/#{repo["owner"]}" }
          = repo["owner"]
      - unless repo["homepage"].blank?
        .urls
          %a{ :href => repo["homepage"] } Home Page
      .description= repo["description"]
      .details
        %p
          Last updated:
          = Date.parse(repo["pushed_at"]).to_s
          | Watchers:
          = repo["watchers"]
          | Forks:
          = repo["forks"]
  - else
    %p Search for something, like rspec
    %p Hints:
    %ul
      %li doesn't work for user names
      %li doesn't work without trying to find a repo (no bare w:3 type searches)
  %br

- content_for :sidebar do
  %h4 Options
  %ul
    %li w:# (watchers:minimum) ex. w:6 => has 6 or more watchers
    %li f:# (forks:minimum) ex. f:2 => has 2 or more forks
    %li p:# (pushed_at:within_weeks.ago) ex. p:4 => was pushed to within 4 weeks
    %li s:choice (sorted by "choice") ex. s:pushed_at => sort by "pushed_at" choices (pushed_at, score, watchers, forks)
    %li l:language (language:language) ex. l:ruby => language is ruby (more below)
  %h4 Defaults
  %pre
    w:6 f:2 p:4 s:score
  %ul
    %li minimum of 6 watchers and 2 forks
    %li pushed to in last 4 weeks
    %li sorted by "score" (think lucene/sphinx/etc)

  %h4 Languages
  %p All "popular" languages from Github are supported, including:
  %ul
    - Github::LANGUAGES.each do |k,v|
      %li= "#{k} - #{v}"
